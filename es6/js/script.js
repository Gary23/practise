/**
 * 变量的解构赋值。
 * 可以用于 请求返回的json数据。
 */

// let a = 0;
// let b = 1;
// let c = 2;

// 和上面是相同的作用,这就相当于解构了一个数组。
let [a,b,c]=[0,1,2];

// 但是两边数组的结构必须一样，如果是[d,e,f] = [4,[5,6]] 这样就会报错。
// 效果等同于 var d = 4,e = 5;f = 6;
let [d,[e,f]] = [4,[5,6]];


// 有时解构可以设置一个默认值
// 空数组应该是一个undefinde,但是这里设置了默认值是true，所以右边没值的时候，就是默认值true。
let [foo='true'] = [];
console.log(foo);

// 即便左右结构不同，但是设置了默认值则会在没值时候实用。
let [str1,str2='一个默认值'] = ['一个字符串']

// 对象的解构
// 对象的解构不用按照顺序，只要key值存在即可。
let {foo,bar} = {foo:'javascript',bar:'ES6'}

// 还有一种情况是先声明了一个变量
let str3;
// 先声明了再解构，需要加一个圆括号
({str3} = {str3:'对象解构'});


// 字符串的解构
let [a,b,c,d,e] = '字符串解构';