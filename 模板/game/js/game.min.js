var Bitmap = createjs.Bitmap;
var Container = createjs.Container;
var Rectangle = createjs.Rectangle;
var Stage = createjs.Stage;
var Text = createjs.Text;
var Ticker = createjs.Ticker;
var Touch = createjs.Touch;

// 参数c ,b ,a
_extends = function (c, b, a) {
    // 把b的方法继承到c上面
    var d = createjs.extend(c, b);

    // c.prototype上扩展c.prototype.__photo__的上的方法并且以参数a开头
    createjs.promote(c, a);
    return d
};

_super = function (a, d, c, b) {
    return a[d + "_constructor"].prototype[c].apply(a, b ? b : [])
};
this.info = this.info || {}, function (a) {
    a.VERSION = "version 1.0.5";
    a.StageInfo = {id: null, cacheCanvas: null, canvas: null, stage: null, stageWidth: 0, stageHeight: 0};
    a.LoadInfo = {
        basePath: "",
        loadList: [{src: "img_bg.jpg", id: "img_bg"}, {src: "img_title.png", id: "img_title"}, {
            src: "img_tbg.png",
            id: "img_tbg"
        }, {src: "img_land.jpg", id: "img_land"}, {src: "img_brige.jpg", id: "img_brige"}, {
            src: "img_hero.png",
            id: "img_hero"
        }, {src: "img_tips.png", id: "img_tips"}, {src: "img_btn.png", id: "img_btn"}],
        version: "100"
    }
}(this.info);
var StageInfo = info.StageInfo;
var LoadInfo = info.LoadInfo;
this.manager = this.manager || {}, function (c) {
    var b = function () {
        this._assetsList = {}
    };
    var a = b.prototype;
    a.load = function (e, g, d) {
        var n, i = 0, h = this, o = e.basePath, k = e.loadList, m = e.loadList.length, j = e.version;
        l();
        function l() {
            n = k[i];
            f(o + n.src + (j ? "?" + j : ""), function (p) {
                h._assetsList[n.id] = p;
                i++;
                g && g(i / m);
                if (i < m) {
                    l()
                } else {
                    if (d) {
                        d()
                    }
                }
            })
        }

        function f(r, q) {
            var p = new Image();
            p.src = r;
            if (p.complete) {
                q(p)
            } else {
                p.onload = function () {
                    q(p)
                }
            }
        }
    };
    a.getAssets = function (d) {
        return this._assetsList[d]
    };
    c.LoaderManager = new b()
}(this.manager), function (d) {
    var e = 10;
    var a = function () {
        this._target = {};
        this._tweenId = setInterval(b.bind(this), e)
    };
    var c = a.prototype;
    c.on = function (k, j, h, g) {
        if (!k) {
            return
        }
        var i = {};
        for (var f in h) {
            i[f] = k[f]
        }
        this._target[k.id] = {target: k, curTime: Ticker.getTime(), time: j, attrs: h, oldattrs: i, completeHandler: g}
    };
    c.off = function (i, g) {
        var h = this._target[i.id];
        if (!h) {
            return
        }
        if (g) {
            for (var f in h.attrs) {
                i[f] = h.attrs[f]
            }
        }
        delete this._target[i.id]
    };
    c.dispose = function () {
        clearInterval(this._tweenId)
    };
    function b() {
        var j = [];
        var l, f, n;
        for (var o in this._target) {
            f = this._target[o];
            l = f.target;
            n = (Ticker.getTime() - f.curTime) / f.time;
            if (n >= 1) {
                n = 1
            }
            for (var m in f.attrs) {
                l[m] = (f.attrs[m] - f.oldattrs[m]) * n + f.oldattrs[m]
            }
            if (1 == n) {
                j.push(f)
            }
        }
        for (var h = 0, k = j.length; h < k; h++) {
            f = j[h];
            var g = f.completeHandler;
            this.off(f.target);
            g && g.apply(this, f.attrs.params)
        }
    }

    d.TweenManager = new a()
}(this.manager);
var LoaderManager = manager.LoaderManager;
var TweenManager = manager.TweenManager;
this.uis = this.uis || {}, function (a) {
    a.MyContainer = function () {
        this.Container_constructor()
    };
    var b = _extends(a.MyContainer, Container, "Container");
    b.setLocation = function (d, c) {
        this.x = d;
        this.y = c
    }
}(this.uis), function (a) {
    a.MyImage = function (c) {
        this._orgImg = null;
        this.MyContainer_constructor();
        this._initView(c)
    };
    var b = _extends(a.MyImage, a.MyContainer, "MyContainer");
    b._initView = function (c) {
        this._orgImg = new Bitmap(LoaderManager.getAssets(c));
        this.addChild(this._orgImg)
    };
    b.setSourceRect = function (c, f, d, e) {
        if (this._orgImg.sourceRect) {
            this._orgImg.sourceRect.x = c;
            this._orgImg.sourceRect.y = f;
            this._orgImg.sourceRect.width = d;
            this._orgImg.sourceRect.height = e
        } else {
            this._orgImg.sourceRect = new Rectangle(c, f, d, e)
        }
    }
}(this.uis), function (a) {
    a.MyText = function (e, d) {
        this.MyContainer_constructor();
        this._initView(e, d)
    };
    var b = _extends(a.MyText, a.MyContainer, "MyContainer");
    b._initView = function (e, d) {
        this._text = "";
        this._lineTxt = null;
        this._baseTxt = new Text(this._text, e + "px Arial", d);
        this.addChild(this._baseTxt)
    };
    b._get_text = function () {
        return this._text
    };
    b._set_text = function (d) {
        this._baseTxt.text = d;
        if (this._lineTxt) {
            this._lineTxt.text = d
        }
        this._text = d
    };
    b._set_textAlign = function (d) {
        this._baseTxt.textAlign = d;
        if (this._lineTxt) {
            this._lineTxt.textAlign = d
        }
    };
    b._set_lineHeight = function (d) {
        this._baseTxt.lineHeight = d;
        if (this._lineTxt) {
            this._lineTxt.lineHeight = d
        }
    };
    b.setOutline = function (e, d) {
        if (!this._lineTxt) {
            this._lineTxt = this._baseTxt.clone();
            this.addChildAt(this._lineTxt, 0)
        }
        this._lineTxt.color = d;
        this._lineTxt.outline = e
    };
    try {
        Object.defineProperties(b, {
            text: {get: b._get_text, set: b._set_text},
            textAlign: {set: b._set_textAlign},
            lineHeight: {set: b._set_lineHeight}
        })
    } catch (c) {
    }
}(this.uis);
var MyContainer = uis.MyContainer;
var MyImage = uis.MyImage;
var MyText = uis.MyText;
this.item = this.item || {}, function (c) {
    var e = 1;
    var a = 80;
    var d = 87;
    c.HeroItem = function () {
        this._curFrame = -1;
        this._tolFrame = 4;
        this._tickFrame = 0;
        this._runing = !1;
        this.MyContainer_constructor();
        this._initView();
        this._initEvent()
    };
    var b = _extends(c.HeroItem, MyContainer, "MyContainer");
    b._initView = function () {
        this._heroImg = new MyImage("img_hero");
        this._heroImg.setLocation(0, 0);
        this.addChild(this._heroImg);
        this._setImgByIndex(0)
    };
    b._initEvent = function () {
        this.on("tick", this._onTickHandler, this)
    };
    b._onTickHandler = function (f) {
        if (!this._runing) {
            return
        }
        this._tickFrame++;
        if (0 != this._tickFrame % e) {
            return
        }
        this._setImgByIndex(this._curFrame + 1 < this._tolFrame ? this._curFrame + 1 : 0)
    };
    b.run = function () {
        this._runing = !0;
        this._setImgByIndex(0)
    };
    b.stand = function () {
        this._runing = !1;
        this._setImgByIndex(0)
    };
    b._setImgByIndex = function (f) {
        this._curFrame = f;
        this._heroImg.setSourceRect(a * f, 0, a, d)
    }
}(this.item), function (b) {
    b.BrigeItem = function () {
        this.MyContainer_constructor();
        this._initView()
    };
    var a = _extends(b.BrigeItem, MyContainer, "MyContainer");
    a._initView = function () {
        this._brigeImg = new MyImage("img_brige");
        this.addChild(this._brigeImg);
        this._brigeImg.setLocation(-2, -1)
    }
}(this.item), function (d) {
    var a = 40;
    var h = 150;
    var c = 30;
    var b = 460;
    d.LandItem = function () {
        this.MyContainer_constructor();
        this._initView()
    };
    var g = _extends(d.LandItem, MyContainer, "MyContainer");
    g._initView = function () {
        this._landImg = new MyImage("img_land");
        this.addChild(this._landImg)
    };
    g.updateBrige = function (e, i) {
        e = (e | 0) ? e : Math.floor(Math.random() * h + a);
        i = ((i | 0) ? i : 100) + Math.random() * (b - e) + c;
        this._landImg.setSourceRect(0, 0, e, 468);
        return i
    };
    g._get_width = function () {
        return this.getBounds().width
    };
    try {
        Object.defineProperties(g, {width: {get: g._get_width}})
    } catch (f) {
    }
}(this.item);
var HeroItem = item.HeroItem;
var BrigeItem = item.BrigeItem;
var LandItem = item.LandItem;
this.view = this.view || {}, function (b) {
    b.LoadView = function () {
        this.MyContainer_constructor();
        this._initView()
    };
    var a = _extends(b.LoadView, MyContainer, "MyContainer");
    a._initView = function () {
        this._loadTxt = new MyText(30, "#fff");
        this._loadTxt.setLocation(StageInfo.stageWidth * 0.5, StageInfo.stageHeight * 0.5 - 30);
        this._loadTxt.textAlign = "center";
        this.addChild(this._loadTxt);
        this.setLoadText(0)
    };
    a.setLoadText = function (c) {
        this._loadTxt.text = "正在疯狂加载中" + (c * 100).toFixed() + "%"
    }
}(this.view), function (a) {
    a.StartView = function () {
        this.MyContainer_constructor();
        this._initView()
    };
    var b = _extends(a.StartView, MyContainer, "MyContainer");
    b._initView = function () {
        this._bgImg = new MyImage("img_bg");
        this.addChild(this._bgImg);
        this._titleImg = new MyImage("img_title");
        this._titleImg.setLocation(75, 282);
        this.addChild(this._titleImg);
        this._bestTxt = new MyText(36, "#D7420D");
        this._bestTxt.setLocation(StageInfo.stageWidth - 15, 15);
        this._bestTxt.textAlign = "right";
        this._bestTxt.setOutline(5, "#FFFFFF");
        this.addChild(this._bestTxt);
        this.setBestText(0);
        this._versionTxt = new MyText(20, "#fff");
        this._versionTxt.setLocation(StageInfo.stageWidth - 10, StageInfo.stageHeight - 28);
        this._versionTxt.textAlign = "right";
        this._versionTxt.text = info.VERSION;
        this.addChild(this._versionTxt);
        this.playBtn = new MyImage("img_btn");
        this.playBtn.setSourceRect(0, 0, 157, 62);
        this.playBtn.setLocation(250, 690);
        this.addChild(this.playBtn)
    };
    b.setBestText = function (c) {
        this._bestTxt.text = "Best:" + c
    }
}(this.view), function (b) {
    var c = 540;
    b.GameView = function () {
        this.MyContainer_constructor();
        this._initView()
    };
    var a = _extends(b.GameView, MyContainer, "MyContainer");
    a._initView = function () {
        this._bgImg = new MyImage("img_bg");
        this.addChild(this._bgImg);
        this._scoreTxt = new MyText(36, "#D7420D");
        this._scoreTxt.setLocation(StageInfo.stageWidth - 15, 15);
        this._scoreTxt.textAlign = "right";
        this._scoreTxt.setOutline(5, "#FFFFFF");
        this.addChild(this._scoreTxt);
        this.setScoreText(0);
        this._gameCon = new MyContainer;
        this._brigeItem = new BrigeItem;
        this._heroItem = new HeroItem;
        this.resetPosItem();
        this.addChild(this._gameCon);
        this._gameCon.addChild(this._heroItem);
        this._gameCon.addChild(this._brigeItem);
        this._tipsImg = new MyImage("img_tips");
        this._tipsImg.setLocation(158, 102);
        this.addChild(this._tipsImg)
    };
    a.setScoreText = function (d) {
        // if(d >= 5){
        //     console.log('超过5分了')
        // }
        // console.log(d)
        this._scoreTxt.text = "Score:" + d
    };
    a.resetPosItem = function () {
        TweenManager.off(this._gameCon);
        TweenManager.off(this._brigeItem);
        TweenManager.off(this._heroItem);
        this._gameCon.setLocation(0, c);
        this._brigeItem.scaleY = 1;
        this._brigeItem.rotation = 0;
        this._brigeItem.setLocation(148, 0);
        this._heroItem.setLocation(83, -86)
    }
}(this.view), function (b) {
    b.OverView = function () {
        this.MyContainer_constructor();
        this._initView()
    };
    var a = _extends(b.OverView, MyContainer, "MyContainer");
    a._initView = function () {
        this._bgImg = new MyImage("img_bg");
        this.addChild(this._bgImg);
        // this._tbgImg = new MyImage("img_tbg");
        // this._tbgImg.setLocation(72, 255);
        // this.addChild(this._tbgImg);
        this._scoreTxt = new MyText(55, "#D7420D");
        this._scoreTxt.setLocation(StageInfo.stageWidth * 0.5, 455);
        this._scoreTxt.textAlign = "center";
        this._scoreTxt.setOutline(3, "#D7420D");
        this._scoreTxt.lineHeight = 30;
        this.addChild(this._scoreTxt);
        this.setScoreText(0);
        // this.replayBtn = new MyImage("img_btn");
        // this.replayBtn.setSourceRect(0, 62, 157, 62);
        // this.replayBtn.setLocation(147, 550);
        // this.addChild(this.replayBtn);
        // this.shareBtn = new MyImage("img_btn");
        // this.shareBtn.setSourceRect(0, 124, 157, 62);
        // this.shareBtn.setLocation(329, 550);
        // this.addChild(this.shareBtn)
    };
    // 游戏结束后动画的分数
    a.setScoreText = function (c) {
        // this._scoreTxt.text = " " + c + " 分"
        // this._scoreTxt.text = "获得20大洋"
    }
}(this.view);
var LoadView = view.LoadView;
var StartView = view.StartView;
var GameView = view.GameView;
var OverView = view.OverView;
(function () {
    var a = 540;
    window.Paramita = function (g, f, e, d) {
        StageInfo.id = g;
        StageInfo.stage = new Stage(g);
        StageInfo.canvas = StageInfo.stage.canvas;
        StageInfo.stageWidth = StageInfo.canvas.width;
        StageInfo.stageHeight = StageInfo.canvas.height;
        StageInfo.stage.update();
        LoadInfo.basePath = e;
        LoadInfo.version = d;
        Touch.enable(StageInfo.stage);
        Ticker.setFPS(f);
        Ticker.addEventListener("tick", StageInfo.stage);
        this._initLoad()
    };
    var b = Paramita.prototype;
    b._initLoad = function () {
        this._loadView = new LoadView;
        StageInfo.stage.addChild(this._loadView);
        var d = this;
        LoaderManager.load(LoadInfo, e, f);
        function e(g) {
            d._loadView.setLoadText(g)
        }

        function f() {
            StageInfo.stage.removeChild(d._loadView);
            d._loadView = null;
            d._initView();
            d._initEvent();
            d._backGame()
        }
    };
    b._initView = function () {
        this._landList = [];
        this._canPress = !0;
        this._gameing = !1;
        this._startView = new StartView();
        StageInfo.stage.addChild(this._startView);
        this._startView.setBestText(this._bestScore | 0);
        this._gameView = new GameView();
        StageInfo.stage.addChild(this._gameView);
        this._overView = new OverView();
        StageInfo.stage.addChild(this._overView);
        this._gameCon = this._gameView._gameCon;
        this._heroItem = this._gameView._heroItem;
        this._brigeItem = this._gameView._brigeItem;
        this._tipsImg = this._gameView._tipsImg
    };
    b._initEvent = function () {
        var _this = this;
        this._startView.playBtn.on("mousedown", this._onBtnDownHandler, this);
        // 重新开始游戏事件
        $('.reset-game').click(function () {
            _this._onBtnDownHandler();
        })

        $('.reset-btn').click(function () {
            _this._onBtnDownHandler();
        })

        $('.zhiyuan-btn').click(function () {
            $('.zhiyuan').css('display', 'block');
        })

        $('.zhiyuan').click(function () {
            $(this).css('display', 'none');
        })


        // this._overView.replayBtn.on("mousedown", this._onBtnDownHandler, this);
        // 这就是分享按钮的事件
        // this._overView.shareBtn.on("mousedown", this._onBtnDownHandler, this);
        this._gameView.on("mousedown", this._onGamePressHandler, this);
        this._gameView.on("pressup", this._onGamePressHandler, this);
        StageInfo.stage.on("tick", this._onStageTickHandler, this);
        StageInfo.canvas.addEventListener("touchmove", this._onPreventDefaultHanlder)
    };
    b._onBtnDownHandler = function (d) {
        this._startGame();
        // switch (d.currentTarget) {
        //     case this._startView.playBtn:
        //         this._startGame();
        //         break;
        //     case this._overView.replayBtn:
        //         this._startGame();
        //         break;
        //     // case this._overView.shareBtn:
        //     //     this._shareBackCall && this._shareBackCall();
        //     //     break
        // }
    };
    b._onPreventDefaultHanlder = function (d) {
        d.preventDefault();
        return !1
    };
    b._onStageTickHandler = function (d) {
        if (!this._gameing || !this._canPress || !this._isPress) {
            return
        }
        if (this._brigeItem.scaleY < a + 1) {
            this._brigeItem.scaleY = this._brigeItem.scaleY + 10
        }
    };
    b._onGamePressHandler = function (d) {
        if (!this._canPress) {
            return
        }
        if ("mousedown" == d.type) {
            if (this._tipsImg.visible) {
                this._tipsImg.visible = !1
            }
            this._isPress = !0
        } else {
            if ("pressup" == d.type && this._isPress) {
                this._isPress = !1;
                this._canPress = !1;
                TweenManager.on(this._brigeItem, 300, {rotation: 90}, this._runHero.bind(this))
            }
        }
    };
    b._runHero = function () {
        this._heroItem.run();
        var f, e, d = this._landList[this._landList.length - 1];
        if (this._brigeItem.x + this._brigeItem.scaleY + 1 > d.x && this._brigeItem.x + this._brigeItem.scaleY - 1 < d.x + d.width) {
            e = !0;
            f = d.x + d.width - 67
        } else {
            e = !1;
            f = this._brigeItem.x + this._brigeItem.scaleY - 26
        }
        TweenManager.on(this._heroItem, Math.floor((f - this._heroItem.x) * 2.5), {
            x: f,
            params: [e]
        }, this._checkIsRight.bind(this))
    };
    b._checkIsRight = function (f) {
        this._heroItem.stand();
        if (f) {
            this._gameView.setScoreText(++this._score);
            var e, d = this._landList[this._landList.length - 1];
            e = d.x + d.width - 150;
            TweenManager.on(this._gameCon, 300, {x: -e, params: [e]}, this._createLand.bind(this))
        } else {
            TweenManager.on(this._brigeItem, 300, {rotation: 180});
            TweenManager.on(this._heroItem, 500, {y: 500}, this._overGame.bind(this))
        }
    };
    b._initLand = function () {
        if (this._landList.length > 0) {
            this._clearLand()
        }
        var d = new LandItem;
        d.setLocation(0, 0);
        d.updateBrige(150, 0);
        this._gameCon.addChildAt(d, 0);
        this._landList.push(d);
        this._createLand(0)
    };
    b._createLand = function (g) {
        this._brigeItem.rotation = 0;
        this._brigeItem.scaleY = 1;
        this._brigeItem.x = g + 148;
        var f = this._landList[0];
        var d = this._landList[this._landList.length - 1];
        var e = new LandItem;
        var h = e.updateBrige(0, d.x + d.width);
        e.setLocation(d.x + StageInfo.stageWidth, 0);
        this._gameCon.addChildAt(e, 0);
        this._landList.push(e);
        if (this._gameCon.x + f.x + f.width < 0) {
            f.parent && f.parent.removeChild(f);
            f = null;
            this._landList.shift()
        }
        TweenManager.on(e, 300, {x: h}, (function () {
            this._canPress = !0
        }).bind(this))
    };
    b._clearLand = function () {
        for (var d, e = this._landList.length - 1; e >= 0; e--) {
            d = this._landList.pop();
            d.parent && d.parent.removeChild(d)
        }
        this._landList = []
    };
    b._backGame = function () {
        this._gameing = !1;
        this._startView.visible = !0;
        this._gameView.visible = !1;
        this._overView.visible = !1
    };
    b._startGame = function () {
        $('.gameover').css('display', 'none');
        $('.gameover-reset').css('display', 'none');
        $('.zhiyuan').css('display', 'none');
        this._score = 0;
        this._gameing = !0;
        this._canPress = !1;
        this._isPress = !1;
        this._gameView.setScoreText(0);
        this._gameView.resetPosItem();
        this._initLand();
        this._tipsImg.visible = !0;
        this._startView.visible = !1;
        this._gameView.visible = !0;
        this._overView.visible = !1
    };
    b._overGame = function () {

        if (this._score > 5) {
            var msg = $('.gameover');
            msg.css('display', 'block');
        } else {

            var over_msg = $('.gameover-reset');
            $('.over-text').html(this._score + ' 分');
            over_msg.css('display', 'block');
        }


        this._gameing = !1;
        this._startView.visible = !1;
        this._gameView.visible = !1;
        this._overView.visible = !0;
        this._overView.setScoreText(this._score);
        this._overBackCall && this._overBackCall(this._score);
        this._clearLand()
    };
    b._set_bestNumber = function (d) {
        this._startView ? this._startView.setBestText(d) : (this._bestScore = d)
    };
    // 参数d应该是一个函数
    b._set_overBackCall = function (d) {
        this._overBackCall = d
    };
    // b._set_shareBackCall = function (d) {
    //     this._shareBackCall = d
    // };
    try {
        Object.defineProperties(b, {
            bestNumber: {set: b._set_bestNumber},
            // shareBackCall: {set: b._set_shareBackCall},
            overBackCall: {set: b._set_overBackCall}
        })
    } catch (c) {
    }
})();