
this.createjs = this.createjs || {};
// 现在createjs只是一个空对象

// 内部应该是用b中转了一下，结果是让a继承c的方法
createjs.extend = function (a, c) {
    // 新建一个函数b,让其构造函数指定为a函数。
    function b() {
        this.constructor = a
    }
    // 将新建的b函数的原型继承c函数的原型
    b.prototype = c.prototype;
    // 现在b函数的构造函数是a函数，原型继承了c函数的原型

    // a的原型继承b的方法。
    return (a.prototype = new b())
};

// 要在b身上扩展一些东西，就是将b.prototype.__photo__上的方法放到b.prototype上，但是属性名改成了参数d+原属性名
createjs.promote = function (b, d) {
    // 变量c是一个对象，内容是参数b函数的原型对象。
    var c = b.prototype;
    // getPrototypeOf是用来获取c对象（b的原型的构造函数）的原型对象的
    // 这是兼容性写法，目的就是获取c的原型对象。
    var a = (Object.getPrototypeOf && Object.getPrototypeOf(c)) || c.__proto__;
    // console.log(a)
    // 如果能获取到c的原型对象，a应该是c对象的__proto__，也就是其构造函数的prototype(b的原型的构造函数)
    // console.log(Object.getPrototypeOf(c))
    if (a) {
        // 在c对象中增加一个方法，属性是c对象的构造函数，按理说也会在b的原型上增加
        // a.constructor实际上是c的构造函数(b的函数)
        c[(d += "_") + "constructor"] = a.constructor;
        // console.log(a.constructor)
        // 遍历a对象
        for (var e in a) {
            // hasOwnProperty是查看c对象自身有没有e属性，返回一个布尔值
            // 就是将a对象和c对象都有的方法都添加到c对象中，但是属性名是d参数拼接原有属性名
            if (c.hasOwnProperty(e) && (typeof a[e] == "function")) {
                c[d + e] = a[e]
            }
        }
    }
    return b
};

createjs.indexOf = function (d, b) {
    for (var c = 0, a = d.length; c < a; c++) {
        if (b === d[c]) {
            return c
        }
    }
    return -1
};

(function () {
    createjs.proxy = function (c, a) {
        var b = Array.prototype.slice.call(arguments, 2);
        return function () {
            return c.apply(a, Array.prototype.slice.call(arguments, 0).concat(b))
        }
    }
}());

(function () {
    function a(e, d, c) {
        this.type = e;
        this.target = null;
        this.currentTarget = null;
        this.eventPhase = 0;
        this.bubbles = !!d;
        this.cancelable = !!c;
        this.timeStamp = (new Date()).getTime();
        this.defaultPrevented = false;
        this.propagationStopped = false;
        this.immediatePropagationStopped = false;
        this.removed = false
    }

    var b = a.prototype;
    b.preventDefault = function () {
        this.defaultPrevented = this.cancelable && true
    };
    b.stopPropagation = function () {
        this.propagationStopped = true
    };
    b.stopImmediatePropagation = function () {
        this.immediatePropagationStopped = this.propagationStopped = true
    };
    b.remove = function () {
        this.removed = true
    };
    b.clone = function () {
        return new a(this.type, this.bubbles, this.cancelable)
    };
    b.set = function (c) {
        for (var d in c) {
            this[d] = c[d]
        }
        return this
    };
    b.toString = function () {
        return "[Event (type=" + this.type + ")]"
    };
    createjs.Event = a
}());
(function () {
    function a() {
        this._listeners = null;
        this._captureListeners = null
    }

    var b = a.prototype;
    a.initialize = function (c) {
        c.addEventListener = b.addEventListener;
        c.on = b.on;
        c.removeEventListener = c.off = b.removeEventListener;
        c.removeAllEventListeners = b.removeAllEventListeners;
        c.hasEventListener = b.hasEventListener;
        c.dispatchEvent = b.dispatchEvent;
        c._dispatchEvent = b._dispatchEvent;
        c.willTrigger = b.willTrigger
    };
    b.addEventListener = function (f, g, d) {
        var e;
        if (d) {
            e = this._captureListeners = this._captureListeners || {}
        } else {
            e = this._listeners = this._listeners || {}
        }
        var c = e[f];
        if (c) {
            this.removeEventListener(f, g, d)
        }
        c = e[f];
        if (!c) {
            e[f] = [g]
        } else {
            c.push(g)
        }
        return g
    };
    b.on = function (f, h, e, d, g, c) {
        if (h.handleEvent) {
            e = e || h;
            h = h.handleEvent
        }
        e = e || this;
        return this.addEventListener(f, function (i) {
            h.call(e, i, g);
            d && i.remove()
        }, c)
    };
    b.removeEventListener = function (h, j, d) {
        var g = d ? this._captureListeners : this._listeners;
        if (!g) {
            return
        }
        var c = g[h];
        if (!c) {
            return
        }
        for (var f = 0, e = c.length; f < e; f++) {
            if (c[f] == j) {
                if (e == 1) {
                    delete (g[h])
                } else {
                    c.splice(f, 1)
                }
                break
            }
        }
    };
    b.off = b.removeEventListener;
    b.removeAllEventListeners = function (c) {
        if (!c) {
            this._listeners = this._captureListeners = null
        } else {
            if (this._listeners) {
                delete (this._listeners[c])
            }
            if (this._captureListeners) {
                delete (this._captureListeners[c])
            }
        }
    };
    b.dispatchEvent = function (j, g, c) {
        if (typeof j == "string") {
            var m = this._listeners;
            if (!g && (!m || !m[j])) {
                return true
            }
            j = new createjs.Event(j, g, c)
        } else {
            if (j.target && j.clone) {
                j = j.clone()
            }
        }
        try {
            j.target = this
        } catch (h) {
        }
        if (!j.bubbles || !this.parent) {
            this._dispatchEvent(j, 2)
        } else {
            var n = this, k = [n];
            while (n.parent) {
                k.push(n = n.parent)
            }
            var f, d = k.length;
            for (f = d - 1; f >= 0 && !j.propagationStopped; f--) {
                k[f]._dispatchEvent(j, 1 + (f == 0))
            }
            for (f = 1; f < d && !j.propagationStopped; f++) {
                k[f]._dispatchEvent(j, 3)
            }
        }
        return !j.defaultPrevented
    };
    b.hasEventListener = function (e) {
        var d = this._listeners, c = this._captureListeners;
        return !!((d && d[e]) || (c && c[e]))
    };
    b.willTrigger = function (c) {
        var d = this;
        while (d) {
            if (d.hasEventListener(c)) {
                return true
            }
            d = d.parent
        }
        return false
    };
    b.toString = function () {
        return "[EventDispatcher]"
    };
    b._dispatchEvent = function (j, f) {
        var d, h = (f == 1) ? this._captureListeners : this._listeners;
        if (j && h) {
            var c = h[j.type];
            if (!c || !(d = c.length)) {
                return
            }
            try {
                j.currentTarget = this
            } catch (k) {
            }
            try {
                j.eventPhase = f
            } catch (k) {
            }
            j.removed = false;
            c = c.slice();
            for (var g = 0; g < d && !j.immediatePropagationStopped; g++) {
                var m = c[g];
                if (m.handleEvent) {
                    m.handleEvent(j)
                } else {
                    m(j)
                }
                if (j.removed) {
                    this.off(j.type, m, f == 1);
                    j.removed = false
                }
            }
        }
    };
    createjs.EventDispatcher = a
}());
(function () {
    function c() {
        throw"Ticker cannot be instantiated."
    }

    c.RAF_SYNCHED = "synched";
    c.RAF = "raf";
    c.TIMEOUT = "timeout";
    c.useRAF = false;
    c.timingMode = null;
    c.maxDelta = 0;
    c.paused = false;
    c.removeEventListener = null;
    c.removeAllEventListeners = null;
    c.dispatchEvent = null;
    c.hasEventListener = null;
    c._listeners = null;
    createjs.EventDispatcher.initialize(c);
    c._addEventListener = c.addEventListener;
    c.addEventListener = function () {
        !c._inited && c.init();
        return c._addEventListener.apply(c, arguments)
    };
    c._inited = false;
    c._startTime = 0;
    c._pausedTime = 0;
    c._ticks = 0;
    c._pausedTicks = 0;
    c._interval = 50;
    c._lastTime = 0;
    c._times = null;
    c._tickTimes = null;
    c._timerId = null;
    c._raf = true;
    c.setInterval = function (d) {
        c._interval = d;
        if (!c._inited) {
            return
        }
        c._setupTick()
    };
    c.getInterval = function () {
        return c._interval
    };
    c.setFPS = function (d) {
        c.setInterval(1000 / d)
    };
    c.getFPS = function () {
        return 1000 / c._interval
    };
    try {
        Object.defineProperties(c, {
            interval: {get: c.getInterval, set: c.setInterval},
            framerate: {get: c.getFPS, set: c.setFPS}
        })
    } catch (b) {
        console.log(b)
    }
    c.init = function () {
        if (c._inited) {
            return
        }
        c._inited = true;
        c._times = [];
        c._tickTimes = [];
        c._startTime = c._getTime();
        c._times.push(c._lastTime = 0);
        c.interval = c._interval
    };
    c.reset = function () {
        if (c._raf) {
            var d = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;
            d && d(c._timerId)
        } else {
            clearTimeout(c._timerId)
        }
        c.removeAllEventListeners("tick");
        c._timerId = c._times = c._tickTimes = null;
        c._startTime = c._lastTime = c._ticks = 0;
        c._inited = false
    };
    c.getMeasuredTickTime = function (f) {
        var d = 0, g = c._tickTimes;
        if (!g || g.length < 1) {
            return -1
        }
        f = Math.min(g.length, f || (c.getFPS() | 0));
        for (var e = 0; e < f; e++) {
            d += g[e]
        }
        return d / f
    };
    c.getMeasuredFPS = function (d) {
        var e = c._times;
        if (!e || e.length < 2) {
            return -1
        }
        d = Math.min(e.length - 1, d || (c.getFPS() | 0));
        return 1000 / ((e[0] - e[d]) / d)
    };
    c.setPaused = function (d) {
        c.paused = d
    };
    c.getPaused = function () {
        return c.paused
    };
    c.getTime = function (d) {
        return c._startTime ? c._getTime() - (d ? c._pausedTime : 0) : -1
    };
    c.getEventTime = function (d) {
        return c._startTime ? (c._lastTime || c._startTime) - (d ? c._pausedTime : 0) : -1
    };
    c.getTicks = function (d) {
        return c._ticks - (d ? c._pausedTicks : 0)
    };
    c._handleSynch = function () {
        c._timerId = null;
        c._setupTick();
        if (c._getTime() - c._lastTime >= (c._interval - 1) * 0.97) {
            c._tick()
        }
    };
    c._handleRAF = function () {
        c._timerId = null;
        c._setupTick();
        c._tick()
    };
    c._handleTimeout = function () {
        c._timerId = null;
        c._setupTick();
        c._tick()
    };
    c._setupTick = function () {
        if (c._timerId != null) {
            return
        }
        var e = c.timingMode || (c.useRAF && c.RAF_SYNCHED);
        if (e == c.RAF_SYNCHED || e == c.RAF) {
            var d = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;
            if (d) {
                c._timerId = d(e == c.RAF ? c._handleRAF : c._handleSynch);
                c._raf = true;
                return
            }
        }
        c._raf = false;
        c._timerId = setTimeout(c._handleTimeout, c._interval)
    };
    c._tick = function () {
        var f = c.paused;
        var h = c._getTime();
        var e = h - c._lastTime;
        c._lastTime = h;
        c._ticks++;
        if (f) {
            c._pausedTicks++;
            c._pausedTime += e
        }
        if (c.hasEventListener("tick")) {
            var g = new createjs.Event("tick");
            var d = c.maxDelta;
            g.delta = (d && e > d) ? d : e;
            g.paused = f;
            g.time = h;
            g.runTime = h - c._pausedTime;
            c.dispatchEvent(g)
        }
        c._tickTimes.unshift(c._getTime() - h);
        while (c._tickTimes.length > 100) {
            c._tickTimes.pop()
        }
        c._times.unshift(h);
        while (c._times.length > 100) {
            c._times.pop()
        }
    };
    var a = window.performance && (performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow);
    c._getTime = function () {
        return ((a && a.call(performance)) || (new Date().getTime())) - c._startTime
    };
    createjs.Ticker = c
}());
(function () {
    function a() {
        throw"UID cannot be instantiated"
    }

    a._nextID = 0;
    a.get = function () {
        return a._nextID++
    };
    createjs.UID = a
}());
(function () {
    function a(d, f, e, c) {
        this.setValues(d, f, e, c)
    }

    var b = a.prototype;
    b.setValues = function (d, f, e, c) {
        this.x = d || 0;
        this.y = f || 0;
        this.width = e || 0;
        this.height = c || 0;
        return this
    };
    b.extend = function (d, f, e, c) {
        e = e || 0;
        c = c || 0;
        if (d + e > this.x + this.width) {
            this.width = d + e - this.x
        }
        if (f + c > this.y + this.height) {
            this.height = f + c - this.y
        }
        if (d < this.x) {
            this.width += this.x - d;
            this.x = d
        }
        if (f < this.y) {
            this.height += this.y - f;
            this.y = f
        }
        return this
    };
    b.pad = function (f, e, c, d) {
        this.x -= e;
        this.y -= f;
        this.width += e + d;
        this.height += f + c;
        return this
    };
    b.copy = function (c) {
        return this.setValues(c.x, c.y, c.width, c.height)
    };
    b.contains = function (d, f, e, c) {
        e = e || 0;
        c = c || 0;
        return (d >= this.x && d + e <= this.x + this.width && f >= this.y && f + c <= this.y + this.height)
    };
    b.union = function (c) {
        return this.clone().extend(c.x, c.y, c.width, c.height)
    };
    b.intersection = function (g) {
        var d = g.x, f = g.y, c = d + g.width, e = f + g.height;
        if (this.x > d) {
            d = this.x
        }
        if (this.y > f) {
            f = this.y
        }
        if (this.x + this.width < c) {
            c = this.x + this.width
        }
        if (this.y + this.height < e) {
            e = this.y + this.height
        }
        return (c <= d || e <= f) ? null : new a(d, f, c - d, e - f)
    };
    b.intersects = function (c) {
        return (c.x <= this.x + this.width && this.x <= c.x + c.width && c.y <= this.y + this.height && this.y <= c.y + c.height)
    };
    b.isEmpty = function () {
        return this.width <= 0 || this.height <= 0
    };
    b.clone = function () {
        return new a(this.x, this.y, this.width, this.height)
    };
    b.toString = function () {
        return "[Rectangle (x=" + this.x + " y=" + this.y + " width=" + this.width + " height=" + this.height + ")]"
    };
    createjs.Rectangle = a
}());
(function () {
    function b(h, f, j, i, g, e) {
        this.setValues(h, f, j, i, g, e)
    }

    var a = b.prototype;
    b.DEG_TO_RAD = Math.PI / 180;
    b.identity = null;
    a.setValues = function (h, f, j, i, g, e) {
        this.a = (h == null) ? 1 : h;
        this.b = f || 0;
        this.c = j || 0;
        this.d = (i == null) ? 1 : i;
        this.tx = g || 0;
        this.ty = e || 0;
        return this
    };
    a.append = function (n, l, k, j, i, g) {
        var f = this.a;
        var m = this.b;
        var h = this.c;
        var e = this.d;
        if (n != 1 || l != 0 || k != 0 || j != 1) {
            this.a = f * n + h * l;
            this.b = m * n + e * l;
            this.c = f * k + h * j;
            this.d = m * k + e * j
        }
        this.tx = f * i + h * g + this.tx;
        this.ty = m * i + e * g + this.ty;
        return this
    };
    a.prepend = function (m, l, k, j, i, g) {
        var e = this.a;
        var h = this.c;
        var f = this.tx;
        this.a = m * e + k * this.b;
        this.b = l * e + j * this.b;
        this.c = m * h + k * this.d;
        this.d = l * h + j * this.d;
        this.tx = m * f + k * this.ty + i;
        this.ty = l * f + j * this.ty + g;
        return this
    };
    a.appendMatrix = function (c) {
        return this.append(c.a, c.b, c.c, c.d, c.tx, c.ty)
    };
    a.prependMatrix = function (c) {
        return this.prepend(c.a, c.b, c.c, c.d, c.tx, c.ty)
    };
    a.appendTransform = function (i, g, l, k, n, j, h, e, d) {
        if (n % 360) {
            var c = n * b.DEG_TO_RAD;
            var m = Math.cos(c);
            var f = Math.sin(c)
        } else {
            m = 1;
            f = 0
        }
        if (j || h) {
            j *= b.DEG_TO_RAD;
            h *= b.DEG_TO_RAD;
            this.append(Math.cos(h), Math.sin(h), -Math.sin(j), Math.cos(j), i, g);
            this.append(m * l, f * l, -f * k, m * k, 0, 0)
        } else {
            this.append(m * l, f * l, -f * k, m * k, i, g)
        }
        if (e || d) {
            this.tx -= e * this.a + d * this.c;
            this.ty -= e * this.b + d * this.d
        }
        return this
    };
    a.prependTransform = function (i, g, l, k, n, j, h, e, d) {
        if (n % 360) {
            var c = n * b.DEG_TO_RAD;
            var m = Math.cos(c);
            var f = Math.sin(c)
        } else {
            m = 1;
            f = 0
        }
        if (e || d) {
            this.tx -= e;
            this.ty -= d
        }
        if (j || h) {
            j *= b.DEG_TO_RAD;
            h *= b.DEG_TO_RAD;
            this.prepend(m * l, f * l, -f * k, m * k, 0, 0);
            this.prepend(Math.cos(h), Math.sin(h), -Math.sin(j), Math.cos(j), i, g)
        } else {
            this.prepend(m * l, f * l, -f * k, m * k, i, g)
        }
        return this
    };
    a.rotate = function (g) {
        g = g * b.DEG_TO_RAD;
        var f = Math.cos(g);
        var d = Math.sin(g);
        var c = this.a;
        var e = this.b;
        this.a = c * f + this.c * d;
        this.b = e * f + this.d * d;
        this.c = -c * d + this.c * f;
        this.d = -e * d + this.d * f;
        return this
    };
    a.skew = function (d, c) {
        d = d * b.DEG_TO_RAD;
        c = c * b.DEG_TO_RAD;
        this.append(Math.cos(c), Math.sin(c), -Math.sin(d), Math.cos(d), 0, 0);
        return this
    };
    a.scale = function (c, d) {
        this.a *= c;
        this.b *= c;
        this.c *= d;
        this.d *= d;
        return this
    };
    a.translate = function (c, d) {
        this.tx += this.a * c + this.c * d;
        this.ty += this.b * c + this.d * d;
        return this
    };
    a.identity = function () {
        this.a = this.d = 1;
        this.b = this.c = this.tx = this.ty = 0;
        return this
    };
    a.invert = function () {
        var d = this.a;
        var e = this.b;
        var f = this.c;
        var g = this.d;
        var c = this.tx;
        var h = d * g - e * f;
        this.a = g / h;
        this.b = -e / h;
        this.c = -f / h;
        this.d = d / h;
        this.tx = (f * this.ty - g * c) / h;
        this.ty = -(d * this.ty - e * c) / h;
        return this
    };
    a.isIdentity = function () {
        return this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1
    };
    a.equals = function (c) {
        return this.tx === c.tx && this.ty === c.ty && this.a === c.a && this.b === c.b && this.c === c.c && this.d === c.d
    };
    a.transformPoint = function (c, e, d) {
        d = d || {};
        d.x = c * this.a + e * this.c + this.tx;
        d.y = c * this.b + e * this.d + this.ty;
        return d
    };
    a.decompose = function (e) {
        if (e == null) {
            e = {}
        }
        e.x = this.tx;
        e.y = this.ty;
        e.scaleX = Math.sqrt(this.a * this.a + this.b * this.b);
        e.scaleY = Math.sqrt(this.c * this.c + this.d * this.d);
        var d = Math.atan2(-this.c, this.d);
        var c = Math.atan2(this.b, this.a);
        var f = Math.abs(1 - d / c);
        if (f < 0.00001) {
            e.rotation = c / b.DEG_TO_RAD;
            if (this.a < 0 && this.d >= 0) {
                e.rotation += (e.rotation <= 0) ? 180 : -180
            }
            e.skewX = e.skewY = 0
        } else {
            e.skewX = d / b.DEG_TO_RAD;
            e.skewY = c / b.DEG_TO_RAD
        }
        return e
    };
    a.copy = function (c) {
        return this.setValues(c.a, c.b, c.c, c.d, c.tx, c.ty)
    };
    a.clone = function () {
        return new b(this.a, this.b, this.c, this.d, this.tx, this.ty)
    };
    a.toString = function () {
        return "[Matrix2D (a=" + this.a + " b=" + this.b + " c=" + this.c + " d=" + this.d + " tx=" + this.tx + " ty=" + this.ty + ")]"
    };
    b.identity = new b();
    createjs.Matrix2D = b
}());
(function () {
    function a(f, e, g, d, c) {
        this.setValues(f, e, g, d, c)
    }

    var b = a.prototype;
    b.setValues = function (f, e, g, d, c) {
        this.visible = f == null ? true : !!f;
        this.alpha = e == null ? 1 : e;
        this.shadow = g;
        this.compositeOperation = g;
        this.matrix = c || (this.matrix && this.matrix.identity()) || new createjs.Matrix2D();
        return this
    };
    b.append = function (f, e, g, d, c) {
        this.alpha *= e;
        this.shadow = g || this.shadow;
        this.compositeOperation = d || this.compositeOperation;
        this.visible = this.visible && f;
        c && this.matrix.appendMatrix(c);
        return this
    };
    b.prepend = function (f, e, g, d, c) {
        this.alpha *= e;
        this.shadow = this.shadow || g;
        this.compositeOperation = this.compositeOperation || d;
        this.visible = this.visible && f;
        c && this.matrix.prependMatrix(c);
        return this
    };
    b.identity = function () {
        this.visible = true;
        this.alpha = 1;
        this.shadow = this.compositeOperation = null;
        this.matrix.identity();
        return this
    };
    b.clone = function () {
        return new a(this.alpha, this.shadow, this.compositeOperation, this.visible, this.matrix.clone())
    };
    createjs.DisplayProps = a
})();
(function () {
    function a() {
        this.EventDispatcher_constructor();
        this.alpha = 1;
        this.cacheCanvas = null;
        this.cacheID = 0;
        this.id = createjs.UID.get();
        this.mouseEnabled = true;
        this.tickEnabled = true;
        this.name = null;
        this.parent = null;
        this.regX = 0;
        this.regY = 0;
        this.rotation = 0;
        this.scaleX = 1;
        this.scaleY = 1;
        this.skewX = 0;
        this.skewY = 0;
        this.shadow = null;
        this.visible = true;
        this.x = 0;
        this.y = 0;
        this.transformMatrix = null;
        this.compositeOperation = null;
        this.snapToPixel = true;
        this.filters = null;
        this.mask = null;
        this.hitArea = null;
        this.cursor = null;
        this._cacheOffsetX = 0;
        this._cacheOffsetY = 0;
        this._filterOffsetX = 0;
        this._filterOffsetY = 0;
        this._cacheScale = 1;
        this._cacheDataURLID = 0;
        this._cacheDataURL = null;
        this._props = new createjs.DisplayProps();
        this._rectangle = new createjs.Rectangle();
        this._bounds = null
    }

    var d = createjs.extend(a, createjs.EventDispatcher);
    a._MOUSE_EVENTS = ["click", "dblclick", "mousedown", "mouseout", "mouseover", "pressmove", "pressup", "rollout", "rollover"];
    a.suppressCrossDomainErrors = false;
    a._snapToPixelEnabled = false;
    var b = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas");
    if (b.getContext) {
        a._hitTestCanvas = b;
        a._hitTestContext = b.getContext("2d");
        b.width = b.height = 1
    }
    a._nextCacheID = 1;
    d.getStage = function () {
        var f = this, e = createjs.Stage;
        while (f.parent) {
            f = f.parent
        }
        if (f instanceof e) {
            return f
        }
        return null
    };
    try {
        Object.defineProperties(d, {stage: {get: d.getStage}})
    } catch (c) {
    }
    d.isVisible = function () {
        return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0)
    };
    d.draw = function (e, g) {
        var f = this.cacheCanvas;
        if (g || !f) {
            return false
        }
        var h = this._cacheScale;
        e.drawImage(f, this._cacheOffsetX + this._filterOffsetX, this._cacheOffsetY + this._filterOffsetY, f.width / h, f.height / h);
        return true
    };
    d.updateContext = function (h) {
        var j = this, g = j.mask, i = j._props.matrix;
        if (g && g.graphics && !g.graphics.isEmpty()) {
            g.getMatrix(i);
            h.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
            g.graphics.drawAsPath(h);
            h.clip();
            i.invert();
            h.transform(i.a, i.b, i.c, i.d, i.tx, i.ty)
        }
        this.getMatrix(i);
        var f = i.tx, e = i.ty;
        if (a._snapToPixelEnabled && j.snapToPixel) {
            f = f + (f < 0 ? -0.5 : 0.5) | 0;
            e = e + (e < 0 ? -0.5 : 0.5) | 0
        }
        h.transform(i.a, i.b, i.c, i.d, f, e);
        h.globalAlpha *= j.alpha;
        if (j.compositeOperation) {
            h.globalCompositeOperation = j.compositeOperation
        }
        if (j.shadow) {
            this._applyShadow(h, j.shadow)
        }
    };
    d.cache = function (f, i, g, e, h) {
        h = h || 1;
        if (!this.cacheCanvas) {
            this.cacheCanvas = createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas")
        }
        this._cacheWidth = g;
        this._cacheHeight = e;
        this._cacheOffsetX = f;
        this._cacheOffsetY = i;
        this._cacheScale = h;
        this.updateCache()
    };
    d.updateCache = function (i) {
        var f = this.cacheCanvas;
        if (!f) {
            throw"cache() must be called before updateCache()"
        }
        var e = this._cacheScale, m = this._cacheOffsetX * e, l = this._cacheOffsetY * e;
        var k = this._cacheWidth, g = this._cacheHeight, n = f.getContext("2d");
        var j = this._getFilterBounds();
        m += (this._filterOffsetX = j.x);
        l += (this._filterOffsetY = j.y);
        k = Math.ceil(k * e) + j.width;
        g = Math.ceil(g * e) + j.height;
        if (k != f.width || g != f.height) {
            f.width = k;
            f.height = g
        } else {
            if (!i) {
                n.clearRect(0, 0, k + 1, g + 1)
            }
        }
        n.save();
        n.globalCompositeOperation = i;
        n.setTransform(e, 0, 0, e, -m, -l);
        this.draw(n, true);
        this._applyFilters();
        n.restore();
        this.cacheID = a._nextCacheID++
    };
    d.uncache = function () {
        this._cacheDataURL = this.cacheCanvas = null;
        this.cacheID = this._cacheOffsetX = this._cacheOffsetY = this._filterOffsetX = this._filterOffsetY = 0;
        this._cacheScale = 1
    };
    d.getCacheDataURL = function () {
        if (!this.cacheCanvas) {
            return null
        }
        if (this.cacheID != this._cacheDataURLID) {
            this._cacheDataURL = this.cacheCanvas.toDataURL()
        }
        return this._cacheDataURL
    };
    d.localToGlobal = function (e, g, f) {
        return this.getConcatenatedMatrix(this._props.matrix).transformPoint(e, g, f || new createjs.Point())
    };
    d.globalToLocal = function (e, g, f) {
        return this.getConcatenatedMatrix(this._props.matrix).invert().transformPoint(e, g, f || new createjs.Point())
    };
    d.localToLocal = function (e, h, g, f) {
        f = this.localToGlobal(e, h, f);
        return g.globalToLocal(f.x, f.y, f)
    };
    d.setTransform = function (i, g, l, k, m, j, h, f, e) {
        this.x = i || 0;
        this.y = g || 0;
        this.scaleX = l == null ? 1 : l;
        this.scaleY = k == null ? 1 : k;
        this.rotation = m || 0;
        this.skewX = j || 0;
        this.skewY = h || 0;
        this.regX = f || 0;
        this.regY = e || 0;
        return this
    };
    d.getMatrix = function (e) {
        var g = this, f = e && e.identity() || new createjs.Matrix2D();
        return g.transformMatrix ? f.copy(g.transformMatrix) : f.appendTransform(g.x, g.y, g.scaleX, g.scaleY, g.rotation, g.skewX, g.skewY, g.regX, g.regY)
    };
    d.getConcatenatedMatrix = function (e) {
        var g = this, f = this.getMatrix(e);
        while (g = g.parent) {
            f.prependMatrix(g.getMatrix(g._props.matrix))
        }
        return f
    };
    d.getConcatenatedDisplayProps = function (f) {
        f = f ? f.identity() : new createjs.DisplayProps();
        var g = this, e = g.getMatrix(f.matrix);
        do {
            f.prepend(g.visible, g.alpha, g.shadow, g.compositeOperation);
            if (g != this) {
                e.prependMatrix(g.getMatrix(g._props.matrix))
            }
        } while (g = g.parent);
        return f
    };
    d.hitTest = function (e, h) {
        var f = a._hitTestContext;
        f.setTransform(1, 0, 0, 1, -e, -h);
        this.draw(f);
        var g = this._testHit(f);
        f.setTransform(1, 0, 0, 1, 0, 0);
        f.clearRect(0, 0, 2, 2);
        return g
    };
    d.set = function (e) {
        for (var f in e) {
            this[f] = e[f]
        }
        return this
    };
    d.getBounds = function () {
        if (this._bounds) {
            return this._rectangle.copy(this._bounds)
        }
        var e = this.cacheCanvas;
        if (e) {
            var f = this._cacheScale;
            return this._rectangle.setValues(this._cacheOffsetX, this._cacheOffsetY, e.width / f, e.height / f)
        }
        return null
    };
    d.getTransformedBounds = function () {
        return this._getBounds()
    };
    d.setBounds = function (f, h, g, e) {
        if (f == null) {
            this._bounds = f
        }
        this._bounds = (this._bounds || new createjs.Rectangle()).setValues(f, h, g, e)
    };
    d.clone = function () {
        return this._cloneProps(new a())
    };
    d.toString = function () {
        return "[DisplayObject (name=" + this.name + ")]"
    };
    d._cloneProps = function (e) {
        e.alpha = this.alpha;
        e.mouseEnabled = this.mouseEnabled;
        e.tickEnabled = this.tickEnabled;
        e.name = this.name;
        e.regX = this.regX;
        e.regY = this.regY;
        e.rotation = this.rotation;
        e.scaleX = this.scaleX;
        e.scaleY = this.scaleY;
        e.shadow = this.shadow;
        e.skewX = this.skewX;
        e.skewY = this.skewY;
        e.visible = this.visible;
        e.x = this.x;
        e.y = this.y;
        e.compositeOperation = this.compositeOperation;
        e.snapToPixel = this.snapToPixel;
        e.filters = this.filters == null ? null : this.filters.slice(0);
        e.mask = this.mask;
        e.hitArea = this.hitArea;
        e.cursor = this.cursor;
        e._bounds = this._bounds;
        return e
    };
    d._applyShadow = function (e, f) {
        f = f || Shadow.identity;
        e.shadowColor = f.color;
        e.shadowOffsetX = f.offsetX;
        e.shadowOffsetY = f.offsetY;
        e.shadowBlur = f.blur
    };
    d._tick = function (f) {
        var e = this._listeners;
        if (e && e.tick) {
            f.target = null;
            f.propagationStopped = f.immediatePropagationStopped = false;
            this.dispatchEvent(f)
        }
    };
    d._testHit = function (f) {
        try {
            var g = f.getImageData(0, 0, 1, 1).data[3] > 1
        } catch (h) {
            if (!a.suppressCrossDomainErrors) {
                throw"An error has occurred. This is most likely due to security restrictions on reading canvas pixel data with local or cross-domain images."
            }
        }
        return g
    };
    d._applyFilters = function () {
        if (!this.filters || this.filters.length == 0 || !this.cacheCanvas) {
            return
        }
        var g = this.filters.length;
        var f = this.cacheCanvas.getContext("2d");
        var e = this.cacheCanvas.width;
        var k = this.cacheCanvas.height;
        for (var j = 0; j < g; j++) {
            this.filters[j].applyFilter(f, 0, 0, e, k)
        }
    };
    d._getFilterBounds = function (k) {
        var e, j = this.filters, h = this._rectangle.setValues(0, 0, 0, 0);
        if (!j || !(e = j.length)) {
            return h
        }
        for (var g = 0; g < e; g++) {
            var m = this.filters[g];
            m.getBounds && m.getBounds(h)
        }
        return h
    };
    d._getBounds = function (e, f) {
        return this._transformBounds(this.getBounds(), e, f)
    };
    d._transformBounds = function (i, p, g) {
        if (!i) {
            return i
        }
        var k = i.x, j = i.y, o = i.width, l = i.height, h = this._props.matrix;
        h = g ? h.identity() : this.getMatrix(h);
        if (k || j) {
            h.appendTransform(0, 0, 1, 1, 0, 0, 0, -k, -j)
        }
        if (p) {
            h.prependMatrix(p)
        }
        var n = o * h.a, m = o * h.b;
        var f = l * h.c, e = l * h.d;
        var v = h.tx, u = h.ty;
        var t = v, s = v, r = u, q = u;
        if ((k = n + v) < t) {
            t = k
        } else {
            if (k > s) {
                s = k
            }
        }
        if ((k = n + f + v) < t) {
            t = k
        } else {
            if (k > s) {
                s = k
            }
        }
        if ((k = f + v) < t) {
            t = k
        } else {
            if (k > s) {
                s = k
            }
        }
        if ((j = m + u) < r) {
            r = j
        } else {
            if (j > q) {
                q = j
            }
        }
        if ((j = m + e + u) < r) {
            r = j
        } else {
            if (j > q) {
                q = j
            }
        }
        if ((j = e + u) < r) {
            r = j
        } else {
            if (j > q) {
                q = j
            }
        }
        return i.setValues(t, r, s - t, q - r)
    };
    d._hasMouseEventListener = function () {
        var f = a._MOUSE_EVENTS;
        for (var g = 0, e = f.length; g < e; g++) {
            if (this.hasEventListener(f[g])) {
                return true
            }
        }
        return !!this.cursor
    };
    createjs.DisplayObject = createjs.promote(a, "EventDispatcher")
}());
(function () {
    function a() {
        this.DisplayObject_constructor();
        this.children = [];
        this.mouseChildren = true;
        this.tickChildren = true
    }

    var c = createjs.extend(a, createjs.DisplayObject);
    c.getNumChildren = function () {
        return this.children.length
    };
    try {
        Object.defineProperties(c, {numChildren: {get: c.getNumChildren}})
    } catch (b) {
    }
    c.initialize = a;
    c.isVisible = function () {
        var d = this.cacheCanvas || this.children.length;
        return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && d)
    };
    c.draw = function (e, h) {
        if (this.DisplayObject_draw(e, h)) {
            return true
        }
        var g = this.children.slice();
        for (var f = 0, d = g.length; f < d; f++) {
            var j = g[f];
            if (!j.isVisible()) {
                continue
            }
            e.save();
            j.updateContext(e);
            j.draw(e);
            e.restore()
        }
        return true
    };
    c.addChild = function (f) {
        if (f == null) {
            return f
        }
        var d = arguments.length;
        if (d > 1) {
            for (var e = 0; e < d; e++) {
                this.addChild(arguments[e])
            }
            return arguments[d - 1]
        }
        if (f.parent) {
            f.parent.removeChild(f)
        }
        f.parent = this;
        this.children.push(f);
        f.dispatchEvent("added");
        return f
    };
    c.addChildAt = function (h, e) {
        var d = arguments.length;
        var g = arguments[d - 1];
        if (g < 0 || g > this.children.length) {
            return arguments[d - 2]
        }
        if (d > 2) {
            for (var f = 0; f < d - 1; f++) {
                this.addChildAt(arguments[f], g + f)
            }
            return arguments[d - 2]
        }
        if (h.parent) {
            h.parent.removeChild(h)
        }
        h.parent = this;
        this.children.splice(e, 0, h);
        h.dispatchEvent("added");
        return h
    };
    c.removeChild = function (g) {
        var d = arguments.length;
        if (d > 1) {
            var f = true;
            for (var e = 0; e < d; e++) {
                f = f && this.removeChild(arguments[e])
            }
            return f
        }
        return this.removeChildAt(createjs.indexOf(this.children, g))
    };
    c.removeChildAt = function (f) {
        var e = arguments.length;
        if (e > 1) {
            var d = [];
            for (var g = 0; g < e; g++) {
                d[g] = arguments[g]
            }
            d.sort(function (k, i) {
                return i - k
            });
            var h = true;
            for (var g = 0; g < e; g++) {
                h = h && this.removeChildAt(d[g])
            }
            return h
        }
        if (f < 0 || f > this.children.length - 1) {
            return false
        }
        var j = this.children[f];
        if (j) {
            j.parent = null
        }
        this.children.splice(f, 1);
        j.dispatchEvent("removed");
        return true
    };
    c.removeAllChildren = function () {
        var d = this.children;
        while (d.length) {
            this.removeChildAt(0)
        }
    };
    c.getChildAt = function (d) {
        return this.children[d]
    };
    c.getChildByName = function (f) {
        var e = this.children;
        for (var g = 0, d = e.length; g < d; g++) {
            if (e[g].name == f) {
                return e[g]
            }
        }
        return null
    };
    c.sortChildren = function (d) {
        this.children.sort(d)
    };
    c.getChildIndex = function (d) {
        return createjs.indexOf(this.children, d)
    };
    c.swapChildrenAt = function (h, g) {
        var d = this.children;
        var f = d[h];
        var e = d[g];
        if (!f || !e) {
            return
        }
        d[h] = e;
        d[g] = f
    };
    c.swapChildren = function (h, g) {
        var e = this.children;
        var k, j;
        for (var f = 0, d = e.length; f < d; f++) {
            if (e[f] == h) {
                k = f
            }
            if (e[f] == g) {
                j = f
            }
            if (k != null && j != null) {
                break
            }
        }
        if (f == d) {
            return
        }
        e[k] = g;
        e[j] = h
    };
    c.setChildIndex = function (h, f) {
        var e = this.children, d = e.length;
        if (h.parent != this || f < 0 || f >= d) {
            return
        }
        for (var g = 0; g < d; g++) {
            if (e[g] == h) {
                break
            }
        }
        if (g == d || g == f) {
            return
        }
        e.splice(g, 1);
        e.splice(f, 0, h)
    };
    c.contains = function (d) {
        while (d) {
            if (d == this) {
                return true
            }
            d = d.parent
        }
        return false
    };
    c.hitTest = function (d, e) {
        return (this.getObjectUnderPoint(d, e) != null)
    };
    c.getObjectsUnderPoint = function (e, h, g) {
        var d = [];
        var f = this.localToGlobal(e, h);
        this._getObjectsUnderPoint(f.x, f.y, d, g > 0, g == 1);
        return d
    };
    c.getObjectUnderPoint = function (d, g, f) {
        var e = this.localToGlobal(d, g);
        return this._getObjectsUnderPoint(e.x, e.y, null, f > 0, f == 1)
    };
    c.getBounds = function () {
        return this._getBounds(null, true)
    };
    c.getTransformedBounds = function () {
        return this._getBounds()
    };
    c.clone = function (d) {
        var e = this._cloneProps(new a());
        if (d) {
            this._cloneChildren(e)
        }
        return e
    };
    c.toString = function () {
        return "[Container (name=" + this.name + ")]"
    };
    c._tick = function (d) {
        if (this.tickChildren) {
            for (var e = this.children.length - 1; e >= 0; e--) {
                var f = this.children[e];
                if (f.tickEnabled && f._tick) {
                    f._tick(d)
                }
            }
        }
        this.DisplayObject__tick(d)
    };
    c._cloneChildren = function (g) {
        if (g.children.length) {
            g.removeAllChildren()
        }
        var d = g.children;
        for (var f = 0, e = this.children.length; f < e; f++) {
            var h = this.children[f].clone(true);
            h.parent = g;
            d.push(h)
        }
    };
    c._getObjectsUnderPoint = function (r, q, n, o, e, m) {
        m = m || 0;
        if (!m && !this._testMask(this, r, q)) {
            return null
        }
        var f, s = createjs.DisplayObject._hitTestContext;
        e = e || (o && this._hasMouseEventListener());
        var h = this.children, j = h.length;
        for (var k = j - 1; k >= 0; k--) {
            var g = h[k];
            var d = g.hitArea;
            if (!g.visible || (!d && !g.isVisible()) || (o && !g.mouseEnabled)) {
                continue
            }
            if (!d && !this._testMask(g, r, q)) {
                continue
            }
            if (!d && g instanceof a) {
                var t = g._getObjectsUnderPoint(r, q, n, o, e, m + 1);
                if (!n && t) {
                    return (o && !this.mouseChildren) ? this : t
                }
            } else {
                if (o && !e && !g._hasMouseEventListener()) {
                    continue
                }
                var p = g.getConcatenatedDisplayProps(g._props);
                f = p.matrix;
                if (d) {
                    f.appendMatrix(d.getMatrix(d._props.matrix));
                    p.alpha = d.alpha
                }
                s.globalAlpha = p.alpha;
                s.setTransform(f.a, f.b, f.c, f.d, f.tx - r, f.ty - q);
                (d || g).draw(s);
                if (!this._testHit(s)) {
                    continue
                }
                s.setTransform(1, 0, 0, 1, 0, 0);
                s.clearRect(0, 0, 2, 2);
                if (n) {
                    n.push(g)
                } else {
                    return (o && !this.mouseChildren) ? this : g
                }
            }
        }
        return null
    };
    c._testMask = function (i, d, j) {
        var f = i.mask;
        if (!f || !f.graphics || f.graphics.isEmpty()) {
            return true
        }
        var h = this._props.matrix, g = i.parent;
        h = g ? g.getConcatenatedMatrix(h) : h.identity();
        h = f.getMatrix(f._props.matrix).prependMatrix(h);
        var e = createjs.DisplayObject._hitTestContext;
        e.setTransform(h.a, h.b, h.c, h.d, h.tx - d, h.ty - j);
        f.graphics.drawAsPath(e);
        e.fillStyle = "#000";
        e.fill();
        if (!this._testHit(e)) {
            return false
        }
        e.setTransform(1, 0, 0, 1, 0, 0);
        e.clearRect(0, 0, 2, 2);
        return true
    };
    c._getBounds = function (e, f) {
        var k = this.DisplayObject_getBounds();
        if (k) {
            return this._transformBounds(k, e, f)
        }
        var h = this._props.matrix;
        h = f ? h.identity() : this.getMatrix(h);
        if (e) {
            h.prependMatrix(e)
        }
        var d = this.children.length, j = null;
        for (var g = 0; g < d; g++) {
            var m = this.children[g];
            if (!m.visible || !(k = m._getBounds(h))) {
                continue
            }
            if (j) {
                j.extend(k.x, k.y, k.width, k.height)
            } else {
                j = k.clone()
            }
        }
        return j
    };
    createjs.Container = createjs.promote(a, "DisplayObject")
}());
(function () {
    function a(c) {
        this.DisplayObject_constructor();
        if (typeof c == "string") {
            this.image = document.createElement("img");
            this.image.src = c
        } else {
            this.image = c
        }
        this.sourceRect = null
    }

    var b = createjs.extend(a, createjs.DisplayObject);
    b.initialize = a;
    b.isVisible = function () {
        var d = this.image;
        var c = this.cacheCanvas || (d && (d.naturalWidth || d.getContext || d.readyState >= 2));
        return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && c)
    };
    b.draw = function (o, c) {
        if (this.DisplayObject_draw(o, c) || !this.image) {
            return true
        }
        var f = this.image, j = this.sourceRect;
        if (j) {
            var e = j.x, m = j.y, d = e + j.width, k = m + j.height, l = 0, i = 0, n = f.width, g = f.height;
            if (e < 0) {
                l -= e;
                e = 0
            }
            if (d > n) {
                d = n
            }
            if (m < 0) {
                i -= m;
                m = 0
            }
            if (k > g) {
                k = g
            }
            o.drawImage(f, e, m, d - e, k - m, l, i, d - e, k - m)
        } else {
            o.drawImage(f, 0, 0)
        }
        return true
    };
    b.getBounds = function () {
        var d = this.DisplayObject_getBounds();
        if (d) {
            return d
        }
        var e = this.image, f = this.sourceRect || e;
        var c = (e && (e.naturalWidth || e.getContext || e.readyState >= 2));
        return c ? this._rectangle.setValues(0, 0, f.width, f.height) : null
    };
    b.clone = function () {
        var c = new a(this.image);
        if (this.sourceRect) {
            c.sourceRect = this.sourceRect.clone()
        }
        this._cloneProps(c);
        return c
    };
    b.toString = function () {
        return "[Bitmap (name=" + this.name + ")]"
    };
    createjs.Bitmap = createjs.promote(a, "DisplayObject")
}());
(function () {
    function b(f, e, d) {
        this.DisplayObject_constructor();
        this.text = f;
        this.font = e;
        this.color = d;
        this.textAlign = "left";
        this.textBaseline = "top";
        this.maxWidth = null;
        this.outline = 0;
        this.lineHeight = 0;
        this.lineWidth = null
    }

    var c = createjs.extend(b, createjs.DisplayObject);
    var a = (createjs.createCanvas ? createjs.createCanvas() : document.createElement("canvas"));
    if (a.getContext) {
        b._workingContext = a.getContext("2d");
        a.width = a.height = 1
    }
    b.H_OFFSETS = {start: 0, left: 0, center: -0.5, end: -1, right: -1};
    b.V_OFFSETS = {top: 0, hanging: -0.01, middle: -0.4, alphabetic: -0.8, ideographic: -0.85, bottom: -1};
    c.isVisible = function () {
        var d = this.cacheCanvas || (this.text != null && this.text !== "");
        return !!(this.visible && this.alpha > 0 && this.scaleX != 0 && this.scaleY != 0 && d)
    };
    c.draw = function (d, f) {
        if (this.DisplayObject_draw(d, f)) {
            return true
        }
        var e = this.color || "#000";
        if (this.outline) {
            d.strokeStyle = e;
            d.lineWidth = this.outline * 1
        } else {
            d.fillStyle = e
        }
        this._drawText(this._prepContext(d));
        return true
    };
    c.getMeasuredWidth = function () {
        return this._getMeasuredWidth(this.text)
    };
    c.getMeasuredLineHeight = function () {
        return this._getMeasuredWidth("M") * 1.2
    };
    c.getMeasuredHeight = function () {
        return this._drawText(null, {}).height
    };
    c.getBounds = function () {
        var g = this.DisplayObject_getBounds();
        if (g) {
            return g
        }
        if (this.text == null || this.text === "") {
            return null
        }
        var h = this._drawText(null, {});
        var e = (this.maxWidth && this.maxWidth < h.width) ? this.maxWidth : h.width;
        var d = e * b.H_OFFSETS[this.textAlign || "left"];
        var f = this.lineHeight || this.getMeasuredLineHeight();
        var i = f * b.V_OFFSETS[this.textBaseline || "top"];
        return this._rectangle.setValues(d, i, e, h.height)
    };
    c.getMetrics = function () {
        var d = {lines: []};
        d.lineHeight = this.lineHeight || this.getMeasuredLineHeight();
        d.vOffset = d.lineHeight * b.V_OFFSETS[this.textBaseline || "top"];
        return this._drawText(null, d, d.lines)
    };
    c.clone = function () {
        return this._cloneProps(new b(this.text, this.font, this.color))
    };
    c.toString = function () {
        return "[Text (text=" + (this.text.length > 20 ? this.text.substr(0, 17) + "..." : this.text) + ")]"
    };
    c._cloneProps = function (d) {
        this.DisplayObject__cloneProps(d);
        d.textAlign = this.textAlign;
        d.textBaseline = this.textBaseline;
        d.maxWidth = this.maxWidth;
        d.outline = this.outline;
        d.lineHeight = this.lineHeight;
        d.lineWidth = this.lineWidth;
        return d
    };
    c._prepContext = function (d) {
        d.font = this.font || "10px sans-serif";
        d.textAlign = this.textAlign || "left";
        d.textBaseline = this.textBaseline || "top";
        return d
    };
    c._drawText = function (v, e, x) {
        var m = !!v;
        if (!m) {
            v = b._workingContext;
            v.save();
            this._prepContext(v)
        }
        var s = this.lineHeight || this.getMeasuredLineHeight();
        var d = 0, n = 0;
        var t = String(this.text).split(/(?:\r\n|\r|\n)/);
        for (var k = 0, f = t.length; k < f; k++) {
            var q = t[k];
            var r = null;
            if (this.lineWidth != null && (r = v.measureText(q).width) > this.lineWidth) {
                var p = q.split(/(\s)/);
                q = p[0];
                r = v.measureText(q).width;
                for (var g = 1, h = p.length; g < h; g += 2) {
                    var u = v.measureText(p[g] + p[g + 1]).width;
                    if (r + u > this.lineWidth) {
                        if (m) {
                            this._drawTextLine(v, q, n * s)
                        }
                        if (x) {
                            x.push(q)
                        }
                        if (r > d) {
                            d = r
                        }
                        q = p[g + 1];
                        r = v.measureText(q).width;
                        n++
                    } else {
                        q += p[g] + p[g + 1];
                        r += u
                    }
                }
            }
            if (m) {
                this._drawTextLine(v, q, n * s)
            }
            if (x) {
                x.push(q)
            }
            if (e && r == null) {
                r = v.measureText(q).width
            }
            if (r > d) {
                d = r
            }
            n++
        }
        if (e) {
            e.width = d;
            e.height = n * s
        }
        if (!m) {
            v.restore()
        }
        return e
    };
    c._drawTextLine = function (d, e, f) {
        if (this.outline) {
            d.strokeText(e, 0, f, this.maxWidth || 65535)
        } else {
            d.fillText(e, 0, f, this.maxWidth || 65535)
        }
    };
    c._getMeasuredWidth = function (f) {
        var e = b._workingContext;
        e.save();
        var d = this._prepContext(e).measureText(f).width;
        e.restore();
        return d
    };
    createjs.Text = createjs.promote(b, "DisplayObject")
}());
(function () {
    function c(d) {
        this.Container_constructor();
        this.autoClear = true;
        this.canvas = (typeof d == "string") ? document.getElementById(d) : d;
        this.mouseX = 0;
        this.mouseY = 0;
        this.drawRect = null;
        this.snapToPixelEnabled = false;
        this.mouseInBounds = false;
        this.tickOnUpdate = true;
        this.mouseMoveOutside = false;
        this.preventSelection = true;
        this._pointerData = {};
        this._pointerCount = 0;
        this._primaryPointerID = null;
        this._mouseOverIntervalID = null;
        this._nextStage = null;
        this._prevStage = null;
        this.enableDOMEvents(true)
    }

    var b = createjs.extend(c, createjs.Container);
    b._get_nextStage = function () {
        return this._nextStage
    };
    b._set_nextStage = function (d) {
        if (this._nextStage) {
            this._nextStage._prevStage = null
        }
        if (d) {
            d._prevStage = this
        }
        this._nextStage = d
    };
    try {
        Object.defineProperties(b, {nextStage: {get: b._get_nextStage, set: b._set_nextStage}})
    } catch (a) {
    }
    b.update = function (e) {
        if (!this.canvas) {
            return
        }
        if (this.tickOnUpdate) {
            this.tick(e)
        }
        if (this.dispatchEvent("drawstart", false, true) === false) {
            return
        }
        createjs.DisplayObject._snapToPixelEnabled = this.snapToPixelEnabled;
        var f = this.drawRect, d = this.canvas.getContext("2d");
        d.setTransform(1, 0, 0, 1, 0, 0);
        if (this.autoClear) {
            if (f) {
                d.clearRect(f.x, f.y, f.width, f.height)
            } else {
                d.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1)
            }
        }
        d.save();
        if (this.drawRect) {
            d.beginPath();
            d.rect(f.x, f.y, f.width, f.height);
            d.clip()
        }
        this.updateContext(d);
        this.draw(d, false);
        d.restore();
        this.dispatchEvent("drawend")
    };
    b.tick = function (e) {
        if (!this.tickEnabled || this.dispatchEvent("tickstart", false, true) === false) {
            return
        }
        var d = new createjs.Event("tick");
        if (e) {
            for (var f in e) {
                if (e.hasOwnProperty(f)) {
                    d[f] = e[f]
                }
            }
        }
        this._tick(d);
        this.dispatchEvent("tickend")
    };
    b.handleEvent = function (d) {
        if (d.type == "tick") {
            this.update(d)
        }
    };
    b.clear = function () {
        if (!this.canvas) {
            return
        }
        var d = this.canvas.getContext("2d");
        d.setTransform(1, 0, 0, 1, 0, 0);
        d.clearRect(0, 0, this.canvas.width + 1, this.canvas.height + 1)
    };
    b.toDataURL = function (f, l) {
        var j, e = this.canvas.getContext("2d"), d = this.canvas.width, g = this.canvas.height;
        if (f) {
            j = e.getImageData(0, 0, d, g);
            var i = e.globalCompositeOperation;
            e.globalCompositeOperation = "destination-over";
            e.fillStyle = f;
            e.fillRect(0, 0, d, g)
        }
        var k = this.canvas.toDataURL(l || "image/png");
        if (f) {
            e.putImageData(j, 0, 0);
            e.globalCompositeOperation = i
        }
        return k
    };
    b.enableMouseOver = function (d) {
        if (this._mouseOverIntervalID) {
            clearInterval(this._mouseOverIntervalID);
            this._mouseOverIntervalID = null;
            if (d == 0) {
                this._testMouseOver(true)
            }
        }
        if (d == null) {
            d = 20
        } else {
            if (d <= 0) {
                return
            }
        }
        var e = this;
        this._mouseOverIntervalID = setInterval(function () {
            e._testMouseOver()
        }, 1000 / Math.min(50, d))
    };
    b.enableDOMEvents = function (e) {
        if (e == null) {
            e = true
        }
        var i, g, d = this._eventListeners;
        if (!e && d) {
            for (i in d) {
                g = d[i];
                g.t.removeEventListener(i, g.f, false)
            }
            this._eventListeners = null
        } else {
            if (e && !d && this.canvas) {
                var f = window.addEventListener ? window : document;
                var h = this;
                d = this._eventListeners = {};
                d.mouseup = {
                    t: f, f: function (j) {
                        h._handleMouseUp(j)
                    }
                };
                d.mousemove = {
                    t: f, f: function (j) {
                        h._handleMouseMove(j)
                    }
                };
                d.dblclick = {
                    t: this.canvas, f: function (j) {
                        h._handleDoubleClick(j)
                    }
                };
                d.mousedown = {
                    t: this.canvas, f: function (j) {
                        h._handleMouseDown(j)
                    }
                };
                for (i in d) {
                    g = d[i];
                    g.t.addEventListener(i, g.f, false)
                }
            }
        }
    };
    b.clone = function () {
        throw ("Stage cannot be cloned.")
    };
    b.toString = function () {
        return "[Stage (name=" + this.name + ")]"
    };
    b._getElementRect = function (j) {
        var d;
        try {
            d = j.getBoundingClientRect()
        } catch (g) {
            d = {top: j.offsetTop, left: j.offsetLeft, width: j.offsetWidth, height: j.offsetHeight}
        }
        var m = (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || document.body.clientLeft || 0);
        var l = (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || document.body.clientTop || 0);
        var n = window.getComputedStyle ? getComputedStyle(j, null) : j.currentStyle;
        var k = parseInt(n.paddingLeft) + parseInt(n.borderLeftWidth);
        var h = parseInt(n.paddingTop) + parseInt(n.borderTopWidth);
        var i = parseInt(n.paddingRight) + parseInt(n.borderRightWidth);
        var f = parseInt(n.paddingBottom) + parseInt(n.borderBottomWidth);
        return {left: d.left + m + k, right: d.right + m - i, top: d.top + l + h, bottom: d.bottom + l - f}
    };
    b._getPointerData = function (e) {
        var d = this._pointerData[e];
        if (!d) {
            d = this._pointerData[e] = {x: 0, y: 0}
        }
        return d
    };
    b._handleMouseMove = function (d) {
        if (!d) {
            d = window.event
        }
        this._handlePointerMove(-1, d, d.pageX, d.pageY)
    };
    b._handlePointerMove = function (l, j, i, h, g) {
        if (this._prevStage && g === undefined) {
            return
        }
        if (!this.canvas) {
            return
        }
        var f = this._nextStage, k = this._getPointerData(l);
        var d = k.inBounds;
        this._updatePointerPosition(l, j, i, h);
        if (d || k.inBounds || this.mouseMoveOutside) {
            if (l === -1 && k.inBounds == !d) {
                this._dispatchMouseEvent(this, (d ? "mouseleave" : "mouseenter"), false, l, k, j)
            }
            this._dispatchMouseEvent(this, "stagemousemove", false, l, k, j);
            this._dispatchMouseEvent(k.target, "pressmove", true, l, k, j)
        }
        f && f._handlePointerMove(l, j, i, h, null)
    };
    b._updatePointerPosition = function (m, k, i, f) {
        var j = this._getElementRect(this.canvas);
        i -= j.left;
        f -= j.top;
        var d = this.canvas.width;
        var g = this.canvas.height;
        i /= (j.right - j.left) / d;
        f /= (j.bottom - j.top) / g;
        var l = this._getPointerData(m);
        if (l.inBounds = (i >= 0 && f >= 0 && i <= d - 1 && f <= g - 1)) {
            l.x = i;
            l.y = f
        } else {
            if (this.mouseMoveOutside) {
                l.x = i < 0 ? 0 : (i > d - 1 ? d - 1 : i);
                l.y = f < 0 ? 0 : (f > g - 1 ? g - 1 : f)
            }
        }
        l.posEvtObj = k;
        l.rawX = i;
        l.rawY = f;
        if (m === this._primaryPointerID || m === -1) {
            this.mouseX = l.x;
            this.mouseY = l.y;
            this.mouseInBounds = l.inBounds
        }
    };
    b._handleMouseUp = function (d) {
        this._handlePointerUp(-1, d, false)
    };
    b._handlePointerUp = function (l, j, g, f) {
        var d = this._nextStage, k = this._getPointerData(l);
        if (this._prevStage && f === undefined) {
            return
        }
        var i = null, h = k.target;
        if (!f && (h || d)) {
            i = this._getObjectsUnderPoint(k.x, k.y, null, true)
        }
        if (k.down) {
            this._dispatchMouseEvent(this, "stagemouseup", false, l, k, j, i);
            k.down = false
        }
        if (i == h) {
            this._dispatchMouseEvent(h, "click", true, l, k, j)
        }
        this._dispatchMouseEvent(h, "pressup", true, l, k, j);
        if (g) {
            if (l == this._primaryPointerID) {
                this._primaryPointerID = null
            }
            delete (this._pointerData[l])
        } else {
            k.target = null
        }
        d && d._handlePointerUp(l, j, g, f || i && this)
    };
    b._handleMouseDown = function (d) {
        this._handlePointerDown(-1, d, d.pageX, d.pageY)
    };
    b._handlePointerDown = function (l, j, h, g, f) {
        if (this.preventSelection) {
            j.preventDefault()
        }
        if (this._primaryPointerID == null || l === -1) {
            this._primaryPointerID = l
        }
        if (g != null) {
            this._updatePointerPosition(l, j, h, g)
        }
        var i = null, d = this._nextStage, k = this._getPointerData(l);
        if (!f) {
            i = k.target = this._getObjectsUnderPoint(k.x, k.y, null, true)
        }
        if (k.inBounds) {
            this._dispatchMouseEvent(this, "stagemousedown", false, l, k, j, i);
            k.down = true
        }
        this._dispatchMouseEvent(i, "mousedown", true, l, k, j);
        d && d._handlePointerDown(l, j, h, g, f || i && this)
    };
    b._testMouseOver = function (k, d, v) {
        if (this._prevStage && d === undefined) {
            return
        }
        var m = this._nextStage;
        if (!this._mouseOverIntervalID) {
            m && m._testMouseOver(k, d, v);
            return
        }
        var f = this._getPointerData(-1);
        if (!f || (!k && this.mouseX == this._mouseOverX && this.mouseY == this._mouseOverY && this.mouseInBounds)) {
            return
        }
        var r = f.posEvtObj;
        var h = v || r && (r.target == this.canvas);
        var s = null, q = -1, w = "", x, j, g;
        if (!d && (k || this.mouseInBounds && h)) {
            s = this._getObjectsUnderPoint(this.mouseX, this.mouseY, null, true);
            this._mouseOverX = this.mouseX;
            this._mouseOverY = this.mouseY
        }
        var u = this._mouseOverTarget || [];
        var p = u[u.length - 1];
        var n = this._mouseOverTarget = [];
        x = s;
        while (x) {
            n.unshift(x);
            if (!w) {
                w = x.cursor
            }
            x = x.parent
        }
        this.canvas.style.cursor = w;
        if (!d && v) {
            v.canvas.style.cursor = w
        }
        for (j = 0, g = n.length; j < g; j++) {
            if (n[j] != u[j]) {
                break
            }
            q = j
        }
        if (p != s) {
            this._dispatchMouseEvent(p, "mouseout", true, -1, f, r, s)
        }
        for (j = u.length - 1; j > q; j--) {
            this._dispatchMouseEvent(u[j], "rollout", false, -1, f, r, s)
        }
        for (j = n.length - 1; j > q; j--) {
            this._dispatchMouseEvent(n[j], "rollover", false, -1, f, r, p)
        }
        if (p != s) {
            this._dispatchMouseEvent(s, "mouseover", true, -1, f, r, p)
        }
        m && m._testMouseOver(k, d || s && this, v || h && this)
    };
    b._handleDoubleClick = function (h, f) {
        var g = null, d = this._nextStage, i = this._getPointerData(-1);
        if (!f) {
            g = this._getObjectsUnderPoint(i.x, i.y, null, true);
            this._dispatchMouseEvent(g, "dblclick", true, -1, i, h)
        }
        d && d._handleDoubleClick(h, f || g && this)
    };
    b._dispatchMouseEvent = function (j, h, g, i, k, d, f) {
        if (!j || (!g && !j.hasEventListener(h))) {
            return
        }
        var e = new createjs.MouseEvent(h, g, false, k.x, k.y, d, i, i === this._primaryPointerID || i === -1, k.rawX, k.rawY, f);
        j.dispatchEvent(e)
    };
    createjs.Stage = createjs.promote(c, "Container")
}());
(function () {
    function a() {
        throw"Touch cannot be instantiated"
    }

    a.isSupported = function () {
        return !!(("ontouchstart" in window) || (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 0) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 0))
    };
    a.enable = function (c, d, b) {
        if (!c || !c.canvas || !a.isSupported()) {
            return false
        }
        if (c.__touch) {
            return true
        }
        c.__touch = {pointers: {}, multitouch: !d, preventDefault: !b, count: 0};
        if ("ontouchstart" in window) {
            a._IOS_enable(c)
        } else {
            if (window.navigator.msPointerEnabled || window.navigator.pointerEnabled) {
                a._IE_enable(c)
            }
        }
        return true
    };
    a.disable = function (b) {
        if (!b) {
            return
        }
        if ("ontouchstart" in window) {
            a._IOS_disable(b)
        } else {
            if (window.navigator.msPointerEnabled || window.navigator.pointerEnabled) {
                a._IE_disable(b)
            }
        }
        delete b.__touch
    };
    a._IOS_enable = function (c) {
        var b = c.canvas;
        var d = c.__touch.f = function (f) {
            a._IOS_handleEvent(c, f)
        };
        b.addEventListener("touchstart", d, false);
        b.addEventListener("touchmove", d, false);
        b.addEventListener("touchend", d, false);
        b.addEventListener("touchcancel", d, false)
    };
    a._IOS_disable = function (c) {
        var b = c.canvas;
        if (!b) {
            return
        }
        var d = c.__touch.f;
        b.removeEventListener("touchstart", d, false);
        b.removeEventListener("touchmove", d, false);
        b.removeEventListener("touchend", d, false);
        b.removeEventListener("touchcancel", d, false)
    };
    a._IOS_handleEvent = function (c, h) {
        if (!c) {
            return
        }
        if (c.__touch.preventDefault) {
            h.preventDefault && h.preventDefault()
        }
        var g = h.changedTouches;
        var f = h.type;
        for (var d = 0, b = g.length; d < b; d++) {
            var k = g[d];
            var j = k.identifier;
            if (k.target != c.canvas) {
                continue
            }
            if (f == "touchstart") {
                this._handleStart(c, j, h, k.pageX, k.pageY)
            } else {
                if (f == "touchmove") {
                    this._handleMove(c, j, h, k.pageX, k.pageY)
                } else {
                    if (f == "touchend" || f == "touchcancel") {
                        this._handleEnd(c, j, h)
                    }
                }
            }
        }
    };
    a._IE_enable = function (c) {
        var b = c.canvas;
        var d = c.__touch.f = function (f) {
            a._IE_handleEvent(c, f)
        };
        if (window.navigator.pointerEnabled === undefined) {
            b.addEventListener("MSPointerDown", d, false);
            window.addEventListener("MSPointerMove", d, false);
            window.addEventListener("MSPointerUp", d, false);
            window.addEventListener("MSPointerCancel", d, false);
            if (c.__touch.preventDefault) {
                b.style.msTouchAction = "none"
            }
        } else {
            b.addEventListener("pointerdown", d, false);
            window.addEventListener("pointermove", d, false);
            window.addEventListener("pointerup", d, false);
            window.addEventListener("pointercancel", d, false);
            if (c.__touch.preventDefault) {
                b.style.touchAction = "none"
            }
        }
        c.__touch.activeIDs = {}
    };
    a._IE_disable = function (b) {
        var c = b.__touch.f;
        if (window.navigator.pointerEnabled === undefined) {
            window.removeEventListener("MSPointerMove", c, false);
            window.removeEventListener("MSPointerUp", c, false);
            window.removeEventListener("MSPointerCancel", c, false);
            if (b.canvas) {
                b.canvas.removeEventListener("MSPointerDown", c, false)
            }
        } else {
            window.removeEventListener("pointermove", c, false);
            window.removeEventListener("pointerup", c, false);
            window.removeEventListener("pointercancel", c, false);
            if (b.canvas) {
                b.canvas.removeEventListener("pointerdown", c, false)
            }
        }
    };
    a._IE_handleEvent = function (b, f) {
        if (!b) {
            return
        }
        if (b.__touch.preventDefault) {
            f.preventDefault && f.preventDefault()
        }
        var d = f.type;
        var g = f.pointerId;
        var c = b.__touch.activeIDs;
        if (d == "MSPointerDown" || d == "pointerdown") {
            if (f.srcElement != b.canvas) {
                return
            }
            c[g] = true;
            this._handleStart(b, g, f, f.pageX, f.pageY)
        } else {
            if (c[g]) {
                if (d == "MSPointerMove" || d == "pointermove") {
                    this._handleMove(b, g, f, f.pageX, f.pageY)
                } else {
                    if (d == "MSPointerUp" || d == "MSPointerCancel" || d == "pointerup" || d == "pointercancel") {
                        delete (c[g]);
                        this._handleEnd(b, g, f)
                    }
                }
            }
        }
    };
    a._handleStart = function (c, i, g, b, h) {
        var f = c.__touch;
        if (!f.multitouch && f.count) {
            return
        }
        var d = f.pointers;
        if (d[i]) {
            return
        }
        d[i] = true;
        f.count++;
        c._handlePointerDown(i, g, b, h)
    };
    a._handleMove = function (c, g, d, b, f) {
        if (!c.__touch.pointers[g]) {
            return
        }
        c._handlePointerMove(g, d, b, f)
    };
    a._handleEnd = function (b, g, f) {
        var d = b.__touch;
        var c = d.pointers;
        if (!c[g]) {
            return
        }
        d.count--;
        b._handlePointerUp(g, f, true);
        delete (c[g])
    };
    createjs.Touch = a
}());
(function () {
    function a(n, l, f, k, j, h, g, i, e, d, m) {
        this.Event_constructor(n, l, f);
        this.stageX = k;
        this.stageY = j;
        this.rawX = (e == null) ? k : e;
        this.rawY = (d == null) ? j : d;
        this.nativeEvent = h;
        this.pointerID = g;
        this.primary = !!i;
        this.relatedTarget = m
    }

    var c = createjs.extend(a, createjs.Event);
    c._get_localX = function () {
        return this.currentTarget.globalToLocal(this.rawX, this.rawY).x
    };
    c._get_localY = function () {
        return this.currentTarget.globalToLocal(this.rawX, this.rawY).y
    };
    c._get_isTouch = function () {
        return this.pointerID !== -1
    };
    try {
        Object.defineProperties(c, {
            localX: {get: c._get_localX},
            localY: {get: c._get_localY},
            isTouch: {get: c._get_isTouch}
        })
    } catch (b) {
    }
    c.clone = function () {
        return new a(this.type, this.bubbles, this.cancelable, this.stageX, this.stageY, this.nativeEvent, this.pointerID, this.primary, this.rawX, this.rawY)
    };
    c.toString = function () {
        return "[MouseEvent (type=" + this.type + " stageX=" + this.stageX + " stageY=" + this.stageY + ")]"
    };
    createjs.MouseEvent = createjs.promote(a, "Event")
}());