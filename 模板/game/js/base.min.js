(function (doc, win) {
    var docEl = doc.documentElement,
        resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize',
        recalc = function () {
            var clientWidth = docEl.clientWidth;
            if (!clientWidth) return;
            if (clientWidth >= 750) {
                docEl.style.fontSize = '100px';
            } else {
                docEl.style.fontSize = 100 * (clientWidth / 750) + 'px';
            }
        };
    if (!doc.addEventListener) return;
    recalc();
    win.addEventListener(resizeEvt, recalc, false);
    doc.addEventListener('DOMContentLoaded', recalc, false);
})(document, window);


// 传入属性获取cookie中的属性值
function getCookie(b) {
    var d = document.cookie;
    var e = d.split(";");
    for (var c = 0; c < e.length; c++) {
        var a = e[c].split("=");
        if (a[0] == b) {
            return a[1]
        }
    }
    return ""
}
// 设置cookie,参数是属性和属性值，b应该是小时数，b小时候后改cookie过期
function setCookie(c, e, b) {
    var d = c + "=" + escape(e);
    if (b > 0) {
        var a = new Date();
        a.setTime(a.getTime + b * 3600 * 1000);
        d = d + "; expires=" + a.toGMTString()
    }
    document.cookie = d
}


function canvasResize(e) {
    // 获取页面的canvas
    var d = document.getElementById("canvas");
    // 当页面改变大小时，运行c函数
    window.addEventListener("resize", c);
    
    var b = setTimeout(function () {
        clearInterval(b);
        c(null)
    }, 50);
    c(null);

    // 参数不知道有何意义
    function c(g) {
        
        var h = a(d.width, d.height);
        // 获取画布的所有css
        var f = d.style;
        // 获取画布的宽
        f.width = h.width + "px";
        // 获取画布的高
        f.height = h.height + "px";
        // 获取画布的左边距
        f.left = h.left + "px";
        // 获取画布的上边距
        f.top = h.top + "px"
    }

    // 参数是画布的宽和高
    function a(f, g) {
        // 创建一个空对象待返回
        var i = {};
        // 获取网页的宽
        i.winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        // 获取网页的高
        i.winHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
        // 获取网页宽/画布宽的比例  和  网页高/画布高的比例中的  最小值
        i.rate = Math.min(i.winWidth / f, i.winHeight / g);

        // 根据比例算出实际的宽高
        i.width = i.rate * f | 0;
        i.height = i.rate * g | 0;
        // 算出画布距离左边的距离
        i.left = (i.winWidth - i.width) * 0.5 | 0;
        // 算出画布距离上边的距离
        i.top = (i.winHeight - i.height) * 0.5 | 0;
        return i
    }
};